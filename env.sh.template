#!/usr/bin/env bash

# TODO: copy this file into env.sh with your settings
# these values can come from a CI/CD pipeline / a development laptop etc.

export AWS_SDK_LOAD_CONFIG=1 # allows the SDK to load from config. see https://github.com/aws/aws-sdk-js/pull/1391

# 1. the cloudformation stack name, e.g. "MyAppName"

export STACK_NAME=PetAppAuthDemo

# 2. explicitly define the account you intend to deploy into
#    for the simplicity of running the demo, it takes the current profile's account and region
#    in production make sure you explicitly define these via the CI/CD environment variables as a safety mechanism

export STACK_ACCOUNT=$(aws sts get-caller-identity --query "Account" --output text)
export STACK_REGION=$(aws configure get region)

# 3. change to any unused domain name, default to a combination that is be unique per account+region

export COGNITO_DOMAIN_NAME=auth-${STACK_ACCOUNT}-${STACK_REGION}

# 4. set the frontend app URL (used as the CORS origin and Cognito callback URLs)
# NOTE: don't use localhost as APP_URL in production, this is just for development / demo purposes.

export APP_URL=http://localhost:3000

# 5. optional - for IdP integration

## the name you want for the Identity Provider, e.g. "ADFS", "Okta"

# export IDENTITY_PROVIDER_NAME=IdP

## the metadata URL, or the actual XML string, e.g https://example.com/metadata or $(cat metadata.xml)

# export IDENTITY_PROVIDER_METADATA=$(cat metadata.xml)

# 6. other optional configuration

# export GROUPS_ATTRIBUTE_NAME=<the custom attribute that will contain the groups from SAML, default is "groups">
# export ADMINS_GROUP_NAME=<the LDAP group name for admins for the app, default is "pet-app-admins">
# export USERS_GROUP_NAME=<the LDAP group name for regular users for the app, default is "pet-app-users">
# export LAMBDA_MEMORY=<you can set your memory in 64MB increments from 128MB to 3008MB. default is "128">

